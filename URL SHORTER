URL Shortener Create a Python application that generates short URLs for long links
CODE:
import tkinter as tk
from tkinter import messagebox
import hashlib
import sqlite3

# Database functions
def create_db():
    conn = sqlite3.connect('urls.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS urls
                 (id INTEGER PRIMARY KEY, long_url TEXT, short_url TEXT)''')
    conn.commit()
    conn.close()

def shorten_url(long_url):
    short_url = hashlib.md5(long_url.encode()).hexdigest()[:6]
    conn = sqlite3.connect('urls.db')
    c = conn.cursor()
    c.execute("INSERT INTO urls (long_url, short_url) VALUES (?, ?)", (long_url, short_url))
    conn.commit()
    conn.close()
    return short_url

def get_long_url(short_url):
    conn = sqlite3.connect('urls.db')
    c = conn.cursor()
    c.execute("SELECT long_url FROM urls WHERE short_url=?", (short_url,))
    result = c.fetchone()
    conn.close()
    if result:
        return result[0]
    else:
        return None

# GUI Application
class URLShortenerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("URL Shortener")

        # URL entry
        self.url_label = tk.Label(root, text="Enter URL to shorten:")
        self.url_label.grid(row=0, column=0, padx=10, pady=10)

        self.url_entry = tk.Entry(root, width=50)
        self.url_entry.grid(row=0, column=1, padx=10, pady=10)

        self.shorten_button = tk.Button(root, text="Shorten URL", command=self.shorten_url)
        self.shorten_button.grid(row=0, column=2, padx=10, pady=10)

        # Display short URL
        self.short_url_label = tk.Label(root, text="Short URL:")
        self.short_url_label.grid(row=1, column=0, padx=10, pady=10)

        self.short_url_display = tk.Label(root, text="", fg="blue")
        self.short_url_display.grid(row=1, column=1, padx=10, pady=10)

        # Short URL entry for retrieval
        self.retrieve_label = tk.Label(root, text="Enter short URL to retrieve original URL:")
        self.retrieve_label.grid(row=2, column=0, padx=10, pady=10)

        self.retrieve_entry = tk.Entry(root, width=50)
        self.retrieve_entry.grid(row=2, column=1, padx=10, pady=10)

        self.retrieve_button = tk.Button(root, text="Retrieve URL", command=self.retrieve_url)
        self.retrieve_button.grid(row=2, column=2, padx=10, pady=10)

        # Display original URL
        self.original_url_label = tk.Label(root, text="Original URL:")
        self.original_url_label.grid(row=3, column=0, padx=10, pady=10)

        self.original_url_display = tk.Label(root, text="", fg="blue")
        self.original_url_display.grid(row=3, column=1, padx=10, pady=10)

    def shorten_url(self):
        long_url = self.url_entry.get()
        if long_url:
            short_url = shorten_url(long_url)
            self.short_url_display.config(text=short_url)
        else:
            messagebox.showwarning("Input Error", "Please enter a URL.")

    def retrieve_url(self):
        short_url = self.retrieve_entry.get()
        if short_url:
            original_url = get_long_url(short_url)
            if original_url:
                self.original_url_display.config(text=original_url)
            else:
                self.original_url_display.config(text="URL not found.")
        else:
            messagebox.showwarning("Input Error", "Please enter a short URL.")

if __name__ == "__main__":
    create_db()
    root = tk.Tk()
    app = URLShortenerApp(root)
    root.mainloop()
